# если появляется новый пакет в зависимостях его нужно добавить в requirements.txt, затем выполнить
# docker system prune -a -f --volumes && docker-compose up
#
# Запуск multiple-broker:
# cd devops/docker
# docker-compose -f multiple-docker-compose.yml up -d --scale vdi-tornado=1 --scale vdi-pool-worker=2 --scale vdi-monitor-worker=2 --scale vdi-angular=2 --scale vdi-guacamole=2
# Веб-интерфейс будет доступен по: https://your_ip_address
# P.S. --scale container_name=2 - количество реплик контейнера

# Stop:
# docker kill $(docker ps -q)

version: '3.7'
services:
  vdi-postgres:
    image: postgres:11-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
  vdi-redis:
    image: redis:5-alpine
    command: redis-server --requirepass 4NZ7GpHn4IlshPhb --bind 0.0.0.0
    depends_on:
      - vdi-postgres
  vdi-migrations:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    deploy:
      restart_policy:
        condition: none
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPYCACHEPREFIX=/tmp
      - VDI_BROKER_DB_HOST=vdi-postgres
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "cd common/migrations && alembic upgrade head || while [ $$? -ne 0 ]; do alembic upgrade head; done"
    depends_on:
      - vdi-postgres
  vdi-tornado:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPYCACHEPREFIX=/tmp
      - VDI_BROKER_DB_HOST=vdi-postgres
      - VDI_BROKER_REDIS_HOST=vdi-redis
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 5 && pip install -U veil_api_client veil_aio_au && python web_app/app.py --logging=DEBUG --address=0.0.0.0"
    extra_hosts:
      - "ipa.bazalt.auth:192.168.14.83"
    depends_on:
      - vdi-postgres
      - vdi-redis
      - vdi-migrations
    expose:
      - "8888"
  vdi-pool-worker:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPYCACHEPREFIX=/tmp
      - VDI_BROKER_DB_HOST=vdi-postgres
      - VDI_BROKER_REDIS_HOST=vdi-redis
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 10 && pip install -U veil_api_client veil_aio_au && python pool_worker/app.py"
    depends_on:
      - vdi-tornado
  vdi-vm-manager:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPYCACHEPREFIX=/tmp
      - VDI_BROKER_DB_HOST=vdi-postgres
      - VDI_BROKER_REDIS_HOST=vdi-redis
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 10 && pip install -U veil_api_client veil_aio_au && python vm_manager/app.py"
    depends_on:
      - vdi-tornado
  vdi-monitor-worker:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPYCACHEPREFIX=/tmp
      - VDI_BROKER_DB_HOST=vdi-postgres
      - VDI_BROKER_REDIS_HOST=vdi-redis
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 15 && pip install -U veil_api_client veil_aio_au && python monitor_worker/app.py"
    depends_on:
      - vdi-tornado
      - vdi-pool-worker
  vdi-angular:
    build:
      context: ../../
      dockerfile: ./devops/docker/angular/Dockerfile
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ../../frontend:/home/node/app/frontend
      - ./angular/proxy.conf.containers.json:/home/node/app/frontend/src/proxy.conf.json
    command: sh -c "npm start --prefix /home/node/app/frontend/ -- --host=0.0.0.0 --disableHostCheck & npm run thin-client --prefix /home/node/app/frontend/ -- --host=0.0.0.0 --disableHostCheck"
    depends_on:
      - vdi-tornado
    expose:
      - "4200"
  vdi-guacamole:
    image: guacamole/guacd:1.3.0
    depends_on:
      - vdi-tornado
    expose:
      - "4822"
  vdi-nginx:
    image: nginx:stable
    volumes:
      - ../nginx/vdi.conf:/etc/nginx/conf.d/vdi.conf
      - ../../backend/common/veil_ssl/veil_default.crt:/etc/ssl/private/veil_default.crt
      - ../../backend/common/veil_ssl/veil_default.key:/etc/ssl/private/veil_default.key
    depends_on:
      - vdi-angular
    ports:
      - "443:443"
      - "80:80"
  vdi-gateway:
    image: nexus.bazalt.team/veil-broker-gateway:latest
    command: sh -c "python3 app.py --host 0.0.0.0"
    depends_on:
      - vdi-tornado
    ports:
      - "8000:8000"
