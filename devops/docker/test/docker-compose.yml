# Удалить все контейнеры и запустить
# docker system prune -a -f --volumes && docker-compose up
# Просто запустить
# docker-compose up
# список всех контейнеров
# docker ps -a
# удалить контейнер по имени и его вольюмы
# docker container rm vdi-tornado -v
# запустить и войти в шелл конкретного контейнера
# docker run -it docker_tornado sh
# пересобрать конкретные контейнеры
# docker rm vdi-tornado && docker rm vdi-postgres
# docker-compose up -V
# скопировать файл из контейнера на хост
# docker cp vdi-angular:/package-lock.json ~/.
# обновить клиент без пересборки контейнера
# docker exec -it vdi-tornado /usr/local/bin/pipenv run pip install --force-reinstall veil_api_client-2.0.0-py3-none-any.whl

version: '3.4'
services:
  postgres:
    image: postgres:9.6
    container_name: vdi-postgres-test
    network_mode: "host"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
  redis:
    image: redis
    container_name: vdi-redis-test
    network_mode: "host"
    command: redis-server --requirepass 4NZ7GpHn4IlshPhb --bind 0.0.0.0
  memcached:
    image: memcached:alpine
    container_name: vdi-memcached
    network_mode: "host"
    command: sh -c "memcached -m 64"
  veil_test_server:
    build:
      context: ../../../
      dockerfile: ./devops/docker/test/test_veil_server/Dockerfile
    container_name: veil-test-server
    network_mode: "host"
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../../test_veil_server:/opt/veil-vdi/app
    command: pipenv run python veil_test_server.py
  tornado:
    build:
      context: ../../../
      dockerfile: ./devops/docker/python/Dockerfile
    container_name: vdi-tornado-test
    network_mode: "host"
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 5 && cd common/migrations && pipenv run alembic upgrade head && cd ../../web_app/tests && pipenv run pytest"
    depends_on:
      - postgres
      - redis
      - veil_test_server



