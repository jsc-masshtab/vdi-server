# docker system prune -a -f --volumes && docker-compose up

version: '3.7'
services:
  vdi-postgres:
    image: postgres:9.6
    container_name: vdi-postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
    network_mode: "host"
  vdi-redis:
    image: redis
    container_name: vdi-redis
    command: redis-server --requirepass 4NZ7GpHn4IlshPhb --bind 0.0.0.0
    network_mode: "host"
    depends_on:
      - vdi-postgres
  vdi-memcached:
    image: memcached:alpine
    container_name: vdi-memcached
    command: sh -c "memcached -m 64"
    network_mode: "host"
    depends_on:
      - vdi-postgres
  vdi-tornado:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    container_name: vdi-tornado
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 5 && cd common/migrations && pipenv run alembic upgrade head && cd ../../ && pipenv run python web_app/app.py --logging=DEBUG --workers=1"
    network_mode: "host"
    depends_on:
      - vdi-postgres
      - vdi-redis
  vdi-pool-worker:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    container_name: vdi-pool-worker
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 10 && pipenv run python pool_worker/app.py"
    network_mode: "host"
    depends_on:
      - vdi-tornado
  vdi-ws-listener-worker:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    container_name: vdi-ws-listener-worker
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 15 && pipenv run python ws_listener_worker/app.py"
    network_mode: "host"
    depends_on:
      - vdi-tornado
      - vdi-pool-worker
  vdi-angular:
    build:
      context: ../../
      dockerfile: ./devops/docker/angular/Dockerfile
    user: "node"
    container_name: vdi-angular
    working_dir: /home/node/app
    volumes:
      - ../../frontend:/home/node/app/frontend
    command: sh -c "npm start --prefix /home/node/app/frontend/ -- --host=0.0.0.0"
    network_mode: "host"
    depends_on:
      - vdi-tornado
