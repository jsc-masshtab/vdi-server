# Набор контейнеров для прогона тестов
# docker system prune -a -f --volumes && docker-compose -f test-docker-compose.yml up --exit-code-from vdi-test-tornado
version: '3.4'
services:
  vdi-test-postgres:
    image: postgres:9.6
    container_name: vdi-test-postgres
    network_mode: "host"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
  vdi-test-redis:
    image: redis
    container_name: vdi-test-redis
    network_mode: "host"
    command: redis-server --requirepass 4NZ7GpHn4IlshPhb --bind 0.0.0.0
  vdi-test-memcached:
    image: memcached:alpine
    container_name: vdi-test-memcached
    network_mode: "host"
    command: sh -c "memcached -m 64"
  vdi-test-veil-server:
    build:
      context: ../../
      dockerfile: ./devops/docker/test-veil-server/Dockerfile
    container_name: vdi-test-veil-server
    network_mode: "host"
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../test_veil_server:/opt/veil-vdi/app
    command: pipenv run python veil_test_server.py
  vdi-test-tornado:
    build:
      context: ../../
      dockerfile: ./devops/docker/python/Dockerfile
    container_name: vdi-test-tornado
    network_mode: "host"
    environment:
      - PYTHONPATH=/opt/veil-vdi/app
    working_dir: /opt/veil-vdi/app
    volumes:
      - ../../backend:/opt/veil-vdi/app
    command: sh -c "sleep 5 && cd common/migrations && pipenv run alembic upgrade head && cd ../../web_app/tests && pipenv run pytest -m 'smoke_test' && pipenv run pytest --cov=web_app -vv -m 'not broken_runner'"
#    command: sh -c "sleep 5 && cd common/migrations && pipenv run alembic upgrade head && cd ../../web_app/tests && pipenv run pytest -m 'smoke_test' && pipenv run pytest --cov=web_app -vv"
    depends_on:
      - vdi-test-postgres
      - vdi-test-redis
      - vdi-test-veil-server
# manual run only
#  vdi-black:
#    image: mercutiodesign/docker-black
#    container_name: vdi-black
#    network_mode: "host"
#    environment:
#      - PYTHONPATH=/opt/veil-vdi/app
#    working_dir: /opt/veil-vdi/app
#    volumes:
#      - ../../backend:/opt/veil-vdi/app
#    command: sh -c "black ."
