#!/bin/bash

set -e

configure_users()
{
	VDIADMIN="vdiadmin"
    VDIADMIN_PASS="Bazalt1!"

	groupadd vdi-web
	groupadd vdi-web-admin
	useradd -G vdi-web,vdi-web-admin,shadow -s /sbin/nologin $VDIADMIN
	echo "$VDIADMIN:$VDIADMIN_PASS" | chpasswd
}

configure_secrets()
{
	# генерируем local_settings только если его не существует
	if [ ! -f /opt/veil-vdi/app/common/local_settings.py ]; then
		export PYTHONPATH=/opt/veil-vdi/app
		cd /opt/veil-vdi/app
		/opt/veil-vdi/env/bin/python /opt/veil-vdi/app/common/create_local_settings.py -f /opt/veil-vdi/app/common/local_settings.py
		chmod 600 /opt/veil-vdi/app/common/local_settings.py
	fi

	chmod 600 /opt/veil-vdi/app/common/settings.py
	chown -R $VDIADMIN:$VDIADMIN /opt/veil-vdi

	# берем из файла ключи доступа к БД и Redis
	DB_PASS="$(grep -r 'DB_PASS' /opt/veil-vdi/app/common/local_settings.py | sed -r "s/DB_PASS = '(.+)'/\1/g")"
	REDIS_PASS="$(grep -r 'REDIS_PASSWORD' /opt/veil-vdi/app/common/local_settings.py | sed -r "s/REDIS_PASSWORD = '(.+)'/\1/g")"
}

configure_redis()
{
	systemctl enable redis-server.service

	cp /opt/veil-vdi/other/vdi.redis /etc/redis/redis.conf
	# устанавливаем пароль для подключения
	echo "requirepass ${REDIS_PASS}" | tee -a /etc/redis/redis.conf

	systemctl restart redis-server
}

configure_logs()
{
	# creating logs directory at /var/log/veil-vdi
	mkdir -p /var/log/veil-vdi
	chown -R $VDIADMIN:$VDIADMIN /var/log/veil-vdi

	touch /var/log/faillog
	chmod 666 /var/log/faillog

	# deploying configuration files for logrotate
	cp /opt/veil-vdi/other/tornado.logrotate /etc/logrotate.d/veil-vdi
}

configure_systemd()
{
	systemctl daemon-reload
	systemctl enable vdi-web vdi-pool_worker vdi-ws_listener
}

configure_crontab()
{
	# add archive_csv_journal.sh to crontab
	echo "$(echo '1 1 * * * /bin/bash /opt/veil-vdi/app/archive_csv_journal.sh' ; crontab -l)" | crontab -
}

configure_apache2()
{
	a2enmod ssl rewrite proxy proxy_http proxy_wstunnel deflate headers expires remoteip

	cp /opt/veil-vdi/apache2-configs/apache2.conf /etc/apache2
	rm -f /etc/apache2/sites-enabled/*
	rm -f /etc/apache2/sites-available/*
	cp /opt/veil-vdi/apache2-configs/vdi*.conf /etc/apache2/sites-available
	ln -sf /etc/apache2/sites-available/*.conf /etc/apache2/sites-enabled/

	# отключаем режим AstraMode для Astra Linux
	if [ -f /etc/astra_version ] ; then
	    echo "AstraMode off" >> /etc/apache2/apache2.conf
	fi

    apachectl configtest

    systemctl enable apache2
	systemctl restart apache2
}

db_migrations()
{
	systemctl stop vdi-web vdi-pool_worker vdi-ws_listener

	echo "Apply database migrations..."
	export PYTHONPATH=/opt/veil-vdi/app
	cd /opt/veil-vdi/app/common/migrations
	/opt/veil-vdi/env/bin/python /opt/veil-vdi/env/bin/alembic upgrade head

	systemctl start vdi-web vdi-pool_worker vdi-ws_listener
}

case "$1" in
	configure)
		# действия и при установке и при обновлении
		configure_systemd

		if [ -z "$2" ] ; then
		    # действия только при установке
		    configure_users
			configure_secrets
			configure_redis
			configure_logs
			configure_crontab
			configure_apache2
		else
		    # действия только при обновлении
            db_migrations
		fi

		exit 0
		;;
	abort-upgrade|abort-remove|abort-deconfigure)
		exit 0
		;;
	*)
		echo "postinst called with unknown argument: $*" >&2
		exit 1
		;;
esac