#!/bin/bash

set -e

configure_users()
{
	useradd uservdi
	chown -R uservdi:uservdi /opt/veil-vdi

	groupadd vdi-web
	groupadd vdi-web-admin
	useradd -G vdi-web,vdi-web-admin vdiadmin

	# разрешаем вход по ssh только пользователю user
	echo "AllowUsers user" >> /etc/ssh/sshd_config
	service ssh restart
}

configure_secrets()
{
	# генерируем local_settings только если его не существует
	if [ ! -f /opt/veil-vdi/app/common/local_settings.py ]; then
		export PYTHONPATH=/opt/veil-vdi/app
		cd /opt/veil-vdi/app
		/opt/veil-vdi/env/bin/python /opt/veil-vdi/app/common/create_local_settings.py -f /opt/veil-vdi/app/common/local_settings.py

		# подключаем файл с переменными только если он существует
		if [ -f /tmp/vdi-install-vars ]; then
		    source /tmp/vdi-install-vars
		fi

		# вставляем переменные (если они объявлены) в /opt/veil-vdi/app/common/local_settings.py
		[ -n "$PARTITION" ] && sed -i 's@^PARTITION = .*$@PARTITION = '"$PARTITION"'@' /opt/veil-vdi/app/common/local_settings.py
		[ -n "$BY_COUNT" ] && sed -i 's@^BY_COUNT = .*$@BY_COUNT = '"$BY_COUNT"'@' /opt/veil-vdi/app/common/local_settings.py
		[ -n "$COUNT" ] && sed -i 's@^COUNT = .*$@COUNT = '"$COUNT"'@' /opt/veil-vdi/app/common/local_settings.py
		[ -n "$PATH1" ] && sed -i 's@^PATH = .*$@PATH = '"'$PATH1'"'@' /opt/veil-vdi/app/common/local_settings.py
		[ -n "$CREATE" ] && sed -i 's@^CREATE = .*$@CREATE = '"'$CREATE'"'@' /opt/veil-vdi/app/common/local_settings.py
	fi

	# берем из файла ключи доступа к БД и Redis
	DB_PASS="$(grep -r 'DB_PASS' /opt/veil-vdi/app/common/local_settings.py | sed -r "s/DB_PASS = '(.+)'/\1/g")"
	REDIS_PASS="$(grep -r 'REDIS_PASSWORD' /opt/veil-vdi/app/common/local_settings.py | sed -r "s/REDIS_PASSWORD = '(.+)'/\1/g")"
}

configure_redis()
{
	systemctl enable redis-server.service

	cp /opt/veil-vdi/other/vdi.redis /etc/redis/redis.conf
	# устанавливаем пароль для подключения
	echo "requirepass ${REDIS_PASS}" | tee -a /etc/redis/redis.conf

	systemctl restart redis-server
}

configure_postgres()
{
	cp /opt/veil-vdi/other/vdi.postgresql /etc/postgresql/9.6/main/postgresql.conf

	#fix locale
    localedef -i en_US -f UTF-8 en_US.UTF-8
	
	systemctl restart postgresql

	echo 'postgres:postgres' | sudo chpasswd
	sudo -u postgres -i psql -c "ALTER ROLE postgres PASSWORD '${DB_PASS}';"

	# на астре нету бездуховной кодировки en_US.UTF-8. Есть C.UTF-8
	sudo -u postgres -i psql -c "create database vdi encoding 'utf8' lc_collate = 'en_US.UTF-8' lc_ctype = 'en_US.UTF-8' template template0;" || true

	# apply database migrations

	export PYTHONPATH=/opt/veil-vdi/app
	cd /opt/veil-vdi/app/common/migrations
	/opt/veil-vdi/env/bin/python /opt/veil-vdi/env/bin/alembic upgrade head
}

configure_logs()
{
	# creating logs directory at /var/log/veil-vdi/
	mkdir -p /var/log/veil-vdi/ || true
	chown -R uservdi:uservdi /var/log/veil-vdi

	# deploying configuration files for logrotate
	cp /opt/veil-vdi/other/tornado.logrotate /etc/logrotate.d/veil-vdi
}

configure_systemd()
{
	systemctl daemon-reload
	systemctl enable vdi-web && systemctl enable vdi-pool_worker && systemctl enable vdi-ws_listener
#	systemctl restart vdi-web && systemctl restart vdi-pool_worker && systemctl restart vdi-ws_listener
}

configure_crontab()
{
	# add archive_csv_journal.sh to crontab
	echo "$(echo '1 1 * * * /bin/bash /opt/veil-vdi/app/archive_csv_journal.sh' ; crontab -l)" | crontab -
}

configure_apache2()
{
	a2enmod ssl rewrite proxy proxy_http proxy_wstunnel deflate headers expires remoteip

	cp /opt/veil-vdi/apache2-configs/apache2.conf /etc/apache2
	rm -f /etc/apache2/sites-enabled/*
	rm -f /etc/apache2/sites-available/*
	cp /opt/veil-vdi/apache2-configs/vdi*.conf /etc/apache2/sites-available
	ln -sf /etc/apache2/sites-available/*.conf /etc/apache2/sites-enabled/

	# отключаем режим AstraMode для astra linux
	if [ -f /etc/astra_version ] ; then
	    echo "AstraMode off" >> /etc/apache2/apache2.conf
	fi

    apachectl configtest

	systemctl restart apache2
}

case "$1" in
	configure)
		# действия и при установке и при обновлении

		configure_systemd

		# действия только при установке
		if [ ! -n "$2" ] ; then
		    configure_users
			configure_secrets
			configure_redis
#			configure_postgres
			configure_logs
			configure_systemd
			configure_crontab
			configure_apache2
		fi

		exit 0
		;;
	abort-upgrade|abort-remove|abort-deconfigure)
		exit 0
		;;
	*)
		echo "postinst called with unknown argument: $*" >&2
		exit 1
		;;
esac