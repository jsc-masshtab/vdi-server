global
    maxconn 100000
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
 
defaults
    mode               tcp
    log                global
    retries            2
    timeout queue      5s
    timeout connect    5s
    timeout client     60m
    timeout server     60m
    timeout check      15s
     
listen stats
    mode http
    bind {{ hostvars[inventory_hostname]['inventory_hostname'] }}:7000
    stats enable
    stats uri /
 
listen master
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:5000
{% else %}
    bind {{ hostvars[inventory_hostname]['inventory_hostname'] }}:5000
{% endif %}
    maxconn 10000
    option tcplog
    option httpchk OPTIONS /master
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 4 on-marked-down shutdown-sessions
{% if pgbouncer_install|bool %}
  {% for host in groups['postgres_cluster'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}:{{ pgbouncer_listen_port }} check port 8008
  {% endfor %}
{% endif %}
{% if ( pgbouncer_install is not defined ) or ( not pgbouncer_install|bool ) %}
  {% for host in groups['postgres_cluster'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}:{{ postgresql_port }} check port 8008
  {% endfor %}
{% endif %}

listen replicas
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:5001
{% else %}
    bind {{ hostvars[inventory_hostname]['inventory_hostname'] }}:5001
{% endif %}
    maxconn 10000
    option tcplog
    option httpchk OPTIONS /replica
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% if pgbouncer_install|bool %}
  {% for host in groups['postgres_cluster'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}:{{ pgbouncer_listen_port }} check port 8008
  {% endfor %}
{% endif %}
{% if ( pgbouncer_install is not defined ) or ( not pgbouncer_install|bool ) %}
  {% for host in groups['postgres_cluster'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}:{{ postgresql_port }} check port 8008
  {% endfor %}
{% endif %}

listen replicas_sync
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:5002
{% else %}
    bind {{ hostvars[inventory_hostname]['inventory_hostname'] }}:5002
{% endif %}
    maxconn 10000
    option tcplog
    option httpchk OPTIONS /sync
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% if pgbouncer_install|bool %}
  {% for host in groups['postgres_cluster'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}:{{ pgbouncer_listen_port }} check port 8008
  {% endfor %}
{% endif %}
{% if ( pgbouncer_install is not defined ) or ( not pgbouncer_install|bool ) %}
  {% for host in groups['postgres_cluster'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}:{{ postgresql_port }} check port 8008
  {% endfor %}
{% endif %}
 
listen replicas_async
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:5003
{% else %}
    bind {{ hostvars[inventory_hostname]['inventory_hostname'] }}:5003
{% endif %}
    maxconn 10000
    option tcplog
    option httpchk OPTIONS /async
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% if pgbouncer_install|bool %}
  {% for host in groups['postgres_cluster'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}:{{ pgbouncer_listen_port }} check port 8008
  {% endfor %}
{% endif %}
{% if ( pgbouncer_install is not defined ) or ( not pgbouncer_install|bool ) %}
  {% for host in groups['postgres_cluster'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}:{{ postgresql_port }} check port 8008
  {% endfor %}
{% endif %}

