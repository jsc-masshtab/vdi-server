---

- name: Broker | Install postgresql on local
  apt:
    name: "postgresql-{{ postgresql_version }}"
    update_cache: yes
  when: not with_pgcluster|bool

- name: Broker | Configure postgresql on local
  template:
    src: postgresql.conf.j2
    dest: "{{ postgresql_conf_dir }}/postgresql.conf"
    owner: postgres
    group: postgres
    mode: 0644
  notify:
    - reload postgresql
  when: not with_pgcluster|bool

- name: Broker | Register db password
  shell: grep -r 'DB_PASS' /opt/veil-vdi/app/common/local_settings.py | sed -r "s/DB_PASS = '(.+)'/\1/g"
  no_log: true
  register: broker_db_pass

- name: Broker | Create db user on local
  postgresql_user:
    name: "{{ broker_db_user }}"
    password: "{{ broker_db_pass.stdout }}"
    role_attr_flags: LOGIN
  no_log: true
  become: true
  become_user: postgres
  when: not with_pgcluster|bool

- name: Broker | Create db user on pgcluster
  postgresql_user:
    name: "{{ broker_db_user }}"
    password: "{{ broker_db_pass.stdout }}"
    role_attr_flags: LOGIN
  no_log: true
  become: true
  become_user: postgres
  delegate_to: "{{ item }}"
  with_items: "{{ groups.master[0] }}"
  when: with_pgcluster|bool

- name: Broker | Create database on local
  postgresql_db:
    name: "{{ broker_db_name }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    owner: "{{ broker_db_user }}"
  become: true
  become_user: postgres
  when: not with_pgcluster|bool

- name: Broker | Create database on pgcluster
  postgresql_db:
    name: "{{ broker_db_name }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    owner: "{{ broker_db_user }}"
  become: true
  become_user: postgres
  delegate_to: "{{ item }}"
  with_items: "{{ groups.master[0] }}"
  when: with_pgcluster|bool

- name: Broker | Create db extension on local
  postgresql_ext:
    name: "{{ item }}"
    db: "{{ broker_db_name }}"
  become: true
  become_user: postgres
  loop: "{{ broker_pg_ext_list }}"
  when: not with_pgcluster|bool

- name: Broker | Create db extension on pgcluster
  postgresql_ext:
    name: "{{ item.0 }}"
    db: "{{ broker_db_name }}"
  become: true
  become_user: postgres
  delegate_to: "{{ item.1 }}"
  with_nested:
    - "{{ broker_pg_ext_list }}"
    - "{{ groups.master[0] }}"
  when: with_pgcluster|bool

- name: Broker | Update pg_hba.conf on pgcluster
  blockinfile:
    dest: "{{ postgresql_conf_dir }}/pg_hba.conf"
    block: "{{ lookup('template', 'pg_hba.conf.j2') }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR BROKER"
  delegate_to: "{{ item }}"
  with_items: "{{ groups['postgres_cluster'] }}"
  when: with_pgcluster|bool

- name: Broker | Convert db password to md5 hash
  shell: echo -n {{ broker_db_pass.stdout }}{{ broker_db_user }} | md5sum | cut -d" " -f1
  no_log: true
  register: broker_db_pass_md5
  when: with_pgcluster|bool

- name: Broker | Update pgbouncer users on pgcluster
  lineinfile:
    dest: "{{ pgbouncer_conf_dir }}/userlist.txt"
    line: '"{{ broker_db_user }}" "md5{{ broker_db_pass_md5.stdout }}"'
  no_log: true
  delegate_to: "{{ item }}"
  with_items: "{{ groups['postgres_cluster'] }}"
  when: with_pgcluster|bool

- name: Broker | Reload services on pgcluster
  service:
    name: "{{ item.0 }}"
    state: reloaded
  delegate_to: "{{ item.1 }}"
  with_nested:
    - ['postgresql', 'pgbouncer']
    - "{{ groups['postgres_cluster'] }}"
  when: with_pgcluster|bool
