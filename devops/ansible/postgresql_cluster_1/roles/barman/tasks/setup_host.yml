---

- name: Barman | add pg conf
  template:
    src: pg_barman.conf.j2
    dest: "{{ pg_confd_dir }}/pg_barman.conf"
    mode: 0644
    owner: postgres
  delegate_to: "{{ barman_db_host }}"

- name: Barman | update pg hba
  blockinfile:
    dest: "{{ pg_hba_file }}"
    block: "{{ lookup('template', 'pg_hba.conf.j2') }}"
    insertbefore: BOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR BARMAN"
  delegate_to: "{{ barman_db_host }}"

- name: Barman | update repmgr
  blockinfile:
    dest: "{{ repmgr_config }}"
    block: "{{ lookup('template', 'repmgr.conf.j2') }}"
    insertbefore: BOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR BARMAN"
  delegate_to: "{{ barman_db_host }}"

- name: Barman | restart postgres
  service:
    name: postgresql
    state: restarted
  delegate_to: "{{ barman_db_host }}"

- name: Barman | generate ssh key
  command: ssh-keygen -b 2048 -t rsa -N "" -C "postgres@{{ hostvars[barman_db_host].local_ip }}" -f {{ barman_ssh_key }}
  args:
    creates: "{{ barman_ssh_key }}"
  become: true
  become_user: postgres
  delegate_to: "{{ barman_db_host }}"

- name: Barman | pull ssh key
  fetch:
    flat: yes
    src: "{{ barman_pub_key }}"
    dest: "{{ barman_local_key }}"
  become: true
  become_user: postgres
  delegate_to: "{{ barman_db_host }}"

- name: Barman | create dir
  file:
    dest: "{{ barman_auth_keys | dirname}}"
    state: directory
    mode: 0700
    owner: barman
  become: true
  become_user: barman

- name: Barman | add ssh key to auth keys
  blockinfile:
    dest: "{{ barman_auth_keys }}"
    block: "{{ lookup('file', '{{ barman_local_key }}') }}"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR BARMAN {{ barman_db_host }}"
    create: yes
    mode: 0600
  become: true
  become_user: barman

- name: Barman | ssh-keyscan
  shell: "ssh-keyscan -H {{ local_ip }}"
  register: ssh_fingerprint
  delegate_to: "{{ barman_db_host }}"

- name: Barman | copy fingerprint to known hosts
  blockinfile:
    dest: "{{ barman_known_hosts }}"
    block: "{{ ssh_fingerprint.stdout }}"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR BARMAN"
    create: yes
  become: true
  become_user: postgres
  delegate_to: "{{ barman_db_host }}"
