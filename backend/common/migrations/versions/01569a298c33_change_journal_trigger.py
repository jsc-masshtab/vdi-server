"""change_journal_trigger

Revision ID: 01569a298c33
Revises: 709350931aa7
Create Date: 2021-01-15 11:29:22.661644

"""
from alembic import op

from common.settings import DB_USER


# revision identifiers, used by Alembic.
revision = '01569a298c33'
down_revision = '709350931aa7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Вставка данных в дочернюю таблицу
    op.execute("""CREATE OR REPLACE FUNCTION insert_row()
                            RETURNS TRIGGER AS
                            $BODY$
                            DECLARE
                              index INTEGER;
                              period TEXT;
                              form TEXT;
                              count INTEGER;
                              by_count BOOLEAN;
                              partition_date TIMESTAMP;
                              partition_name TEXT;
                              sql TEXT;
                            BEGIN
                              EXECUTE 'SELECT period FROM journal_settings' into period;
                              EXECUTE 'SELECT form FROM journal_settings' into form;
                              EXECUTE 'SELECT count FROM journal_settings' into count;
                              EXECUTE 'SELECT by_count FROM journal_settings' into by_count;
                              IF by_count IS TRUE THEN
                                  BEGIN
                                      partition_date := date_trunc(period, NEW.created AT TIME ZONE 'UTC');
                                      partition_name := format('event_%s', to_char(partition_date, form));
                                      -- Если нет такой таблицы, то создается новая
                                      IF NOT EXISTS(SELECT relname FROM pg_class WHERE relname = partition_name) THEN
                                            PERFORM create_new_partition(partition_date, partition_name);
                                            select format('ALTER TABLE %s OWNER TO {db_user}', partition_name) into sql;
                                            EXECUTE sql;
                                      END IF;
                                      select format('INSERT INTO %s values ($1.*)', partition_name) into sql;
                                      EXECUTE sql USING NEW;
                                      EXECUTE 'SELECT COUNT(*) FROM event' into index;
                                      IF (index % count = 0) THEN
                                        CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
                                        PERFORM archived(partition_date);
                                      END IF;
                                      return NEW;
                                  END;
                              ELSE
                                  BEGIN
                                      partition_date := date_trunc(period, NEW.created AT TIME ZONE 'UTC');
                                      partition_name := format('event_%s', to_char(partition_date, form));
                                      IF NOT EXISTS(SELECT relname FROM pg_class WHERE relname = partition_name) THEN
                                            PERFORM create_new_partition(partition_date, partition_name);
                                            select format('ALTER TABLE %s OWNER TO {db_user}', partition_name) into sql;
                                            EXECUTE sql;
                                            CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
                                            PERFORM archived(partition_date);
                                      END IF;
                                      select format('INSERT INTO %s values ($1.*)', partition_name) into sql;
                                      EXECUTE sql USING NEW;
                                      return NEW;
                                  END;
                              END IF;
                            END;
                            $BODY$
                            LANGUAGE plpgsql;""".format(db_user=DB_USER))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""CREATE OR REPLACE FUNCTION insert_row()
                            RETURNS TRIGGER AS
                            $BODY$
                            DECLARE
                              index INTEGER;
                              period TEXT;
                              form TEXT;
                              count INTEGER;
                              by_count BOOLEAN;
                              partition_date TIMESTAMP;
                              partition_name TEXT;
                              sql TEXT;
                            BEGIN
                              EXECUTE 'SELECT period FROM journal_settings' into period;
                              EXECUTE 'SELECT form FROM journal_settings' into form;
                              EXECUTE 'SELECT count FROM journal_settings' into count;
                              EXECUTE 'SELECT by_count FROM journal_settings' into by_count;
                              IF by_count IS TRUE THEN
                                  BEGIN
                                      partition_date := date_trunc(period, NEW.created AT TIME ZONE 'UTC');
                                      partition_name := format('event_%s', to_char(partition_date, form));
                                      -- Если нет такой таблицы, то создается новая
                                      IF NOT EXISTS(SELECT relname FROM pg_class WHERE relname = partition_name) THEN
                                            PERFORM create_new_partition(partition_date, partition_name);
                                      END IF;
                                      select format('INSERT INTO %s values ($1.*)', partition_name) into sql;
                                      EXECUTE sql USING NEW;
                                      EXECUTE 'SELECT COUNT(*) FROM event' into index;
                                      IF (index % count = 0) THEN
                                        CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
                                        PERFORM archived(partition_date);
                                      END IF;
                                      return NEW;
                                  END;
                              ELSE
                                  BEGIN
                                      partition_date := date_trunc(period, NEW.created AT TIME ZONE 'UTC');
                                      partition_name := format('event_%s', to_char(partition_date, form));
                                      IF NOT EXISTS(SELECT relname FROM pg_class WHERE relname = partition_name) THEN
                                            PERFORM create_new_partition(partition_date, partition_name);
                                            CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
                                            PERFORM archived(partition_date);
                                      END IF;
                                      select format('INSERT INTO %s values ($1.*)', partition_name) into sql;
                                      EXECUTE sql USING NEW;
                                      return NEW;
                                  END;
                              END IF;
                            END;
                            $BODY$
                            LANGUAGE plpgsql;""")
    # ### end Alembic commands ###
